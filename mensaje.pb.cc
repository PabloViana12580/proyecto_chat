// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mensaje.proto

#include "mensaje.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_mensaje_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mensaje_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BroadcastMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mensaje_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BroadcastRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mensaje_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BroadcastResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mensaje_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChangeStatusRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mensaje_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChangeStatusResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mensaje_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConnectedUser;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mensaje_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DirectMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mensaje_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DirectMessageRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mensaje_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DirectMessageResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mensaje_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ErrorResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mensaje_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MyInfoAcknowledge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mensaje_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MyInfoResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mensaje_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MyInfoSynchronize;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mensaje_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_connectedUserRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mensaje_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ConnectedUserResponse;
}  // namespace protobuf_mensaje_2eproto
namespace chat {
class MyInfoSynchronizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MyInfoSynchronize>
      _instance;
} _MyInfoSynchronize_default_instance_;
class MyInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MyInfoResponse>
      _instance;
} _MyInfoResponse_default_instance_;
class MyInfoAcknowledgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MyInfoAcknowledge>
      _instance;
} _MyInfoAcknowledge_default_instance_;
class connectedUserRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<connectedUserRequest>
      _instance;
} _connectedUserRequest_default_instance_;
class ConnectedUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectedUser>
      _instance;
} _ConnectedUser_default_instance_;
class ConnectedUserResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectedUserResponse>
      _instance;
} _ConnectedUserResponse_default_instance_;
class ChangeStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeStatusRequest>
      _instance;
} _ChangeStatusRequest_default_instance_;
class ChangeStatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangeStatusResponse>
      _instance;
} _ChangeStatusResponse_default_instance_;
class BroadcastRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BroadcastRequest>
      _instance;
} _BroadcastRequest_default_instance_;
class BroadcastResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BroadcastResponse>
      _instance;
} _BroadcastResponse_default_instance_;
class BroadcastMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BroadcastMessage>
      _instance;
} _BroadcastMessage_default_instance_;
class DirectMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DirectMessageRequest>
      _instance;
} _DirectMessageRequest_default_instance_;
class DirectMessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DirectMessageResponse>
      _instance;
} _DirectMessageResponse_default_instance_;
class DirectMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DirectMessage>
      _instance;
} _DirectMessage_default_instance_;
class ErrorResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorResponse>
      _instance;
} _ErrorResponse_default_instance_;
class ClientMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientMessage>
      _instance;
} _ClientMessage_default_instance_;
class ServerMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerMessage>
      _instance;
} _ServerMessage_default_instance_;
}  // namespace chat
namespace protobuf_mensaje_2eproto {
static void InitDefaultsMyInfoSynchronize() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_MyInfoSynchronize_default_instance_;
    new (ptr) ::chat::MyInfoSynchronize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::MyInfoSynchronize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MyInfoSynchronize =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMyInfoSynchronize}, {}};

static void InitDefaultsMyInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_MyInfoResponse_default_instance_;
    new (ptr) ::chat::MyInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::MyInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MyInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMyInfoResponse}, {}};

static void InitDefaultsMyInfoAcknowledge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_MyInfoAcknowledge_default_instance_;
    new (ptr) ::chat::MyInfoAcknowledge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::MyInfoAcknowledge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MyInfoAcknowledge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMyInfoAcknowledge}, {}};

static void InitDefaultsconnectedUserRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_connectedUserRequest_default_instance_;
    new (ptr) ::chat::connectedUserRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::connectedUserRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_connectedUserRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsconnectedUserRequest}, {}};

static void InitDefaultsConnectedUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_ConnectedUser_default_instance_;
    new (ptr) ::chat::ConnectedUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::ConnectedUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectedUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectedUser}, {}};

static void InitDefaultsConnectedUserResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_ConnectedUserResponse_default_instance_;
    new (ptr) ::chat::ConnectedUserResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::ConnectedUserResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConnectedUserResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConnectedUserResponse}, {
      &protobuf_mensaje_2eproto::scc_info_ConnectedUser.base,}};

static void InitDefaultsChangeStatusRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_ChangeStatusRequest_default_instance_;
    new (ptr) ::chat::ChangeStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::ChangeStatusRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChangeStatusRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChangeStatusRequest}, {}};

static void InitDefaultsChangeStatusResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_ChangeStatusResponse_default_instance_;
    new (ptr) ::chat::ChangeStatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::ChangeStatusResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChangeStatusResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChangeStatusResponse}, {}};

static void InitDefaultsBroadcastRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_BroadcastRequest_default_instance_;
    new (ptr) ::chat::BroadcastRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::BroadcastRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BroadcastRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBroadcastRequest}, {}};

static void InitDefaultsBroadcastResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_BroadcastResponse_default_instance_;
    new (ptr) ::chat::BroadcastResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::BroadcastResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BroadcastResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBroadcastResponse}, {}};

static void InitDefaultsBroadcastMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_BroadcastMessage_default_instance_;
    new (ptr) ::chat::BroadcastMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::BroadcastMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BroadcastMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBroadcastMessage}, {}};

static void InitDefaultsDirectMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_DirectMessageRequest_default_instance_;
    new (ptr) ::chat::DirectMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::DirectMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DirectMessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDirectMessageRequest}, {}};

static void InitDefaultsDirectMessageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_DirectMessageResponse_default_instance_;
    new (ptr) ::chat::DirectMessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::DirectMessageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DirectMessageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDirectMessageResponse}, {}};

static void InitDefaultsDirectMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_DirectMessage_default_instance_;
    new (ptr) ::chat::DirectMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::DirectMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DirectMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDirectMessage}, {}};

static void InitDefaultsErrorResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_ErrorResponse_default_instance_;
    new (ptr) ::chat::ErrorResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::ErrorResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ErrorResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsErrorResponse}, {}};

static void InitDefaultsClientMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_ClientMessage_default_instance_;
    new (ptr) ::chat::ClientMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::ClientMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_ClientMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsClientMessage}, {
      &protobuf_mensaje_2eproto::scc_info_MyInfoSynchronize.base,
      &protobuf_mensaje_2eproto::scc_info_connectedUserRequest.base,
      &protobuf_mensaje_2eproto::scc_info_ChangeStatusRequest.base,
      &protobuf_mensaje_2eproto::scc_info_BroadcastRequest.base,
      &protobuf_mensaje_2eproto::scc_info_DirectMessageRequest.base,
      &protobuf_mensaje_2eproto::scc_info_MyInfoAcknowledge.base,}};

static void InitDefaultsServerMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::_ServerMessage_default_instance_;
    new (ptr) ::chat::ServerMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::ServerMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_ServerMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsServerMessage}, {
      &protobuf_mensaje_2eproto::scc_info_BroadcastMessage.base,
      &protobuf_mensaje_2eproto::scc_info_DirectMessage.base,
      &protobuf_mensaje_2eproto::scc_info_ErrorResponse.base,
      &protobuf_mensaje_2eproto::scc_info_MyInfoResponse.base,
      &protobuf_mensaje_2eproto::scc_info_ConnectedUserResponse.base,
      &protobuf_mensaje_2eproto::scc_info_ChangeStatusResponse.base,
      &protobuf_mensaje_2eproto::scc_info_BroadcastResponse.base,
      &protobuf_mensaje_2eproto::scc_info_DirectMessageResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MyInfoSynchronize.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MyInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MyInfoAcknowledge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_connectedUserRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectedUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectedUserResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeStatusRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChangeStatusResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BroadcastRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BroadcastResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BroadcastMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DirectMessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DirectMessageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DirectMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ErrorResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerMessage.base);
}

::google::protobuf::Metadata file_level_metadata[17];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::MyInfoSynchronize, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::MyInfoSynchronize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::MyInfoSynchronize, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::MyInfoSynchronize, ip_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::MyInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::MyInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::MyInfoResponse, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::MyInfoAcknowledge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::MyInfoAcknowledge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::MyInfoAcknowledge, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::connectedUserRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::connectedUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::connectedUserRequest, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::connectedUserRequest, username_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ConnectedUser, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ConnectedUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ConnectedUser, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ConnectedUser, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ConnectedUser, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ConnectedUser, ip_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ConnectedUserResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ConnectedUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ConnectedUserResponse, connectedusers_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ChangeStatusRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ChangeStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ChangeStatusRequest, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ChangeStatusResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ChangeStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ChangeStatusResponse, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ChangeStatusResponse, status_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::BroadcastRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::BroadcastRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::BroadcastRequest, message_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::BroadcastResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::BroadcastResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::BroadcastResponse, messagestatus_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::BroadcastMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::BroadcastMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::BroadcastMessage, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::BroadcastMessage, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::BroadcastMessage, username_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::DirectMessageRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::DirectMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::DirectMessageRequest, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::DirectMessageRequest, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::DirectMessageRequest, username_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::DirectMessageResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::DirectMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::DirectMessageResponse, messagestatus_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::DirectMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::DirectMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::DirectMessage, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::DirectMessage, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::DirectMessage, username_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ErrorResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ErrorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ErrorResponse, errormessage_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ClientMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ClientMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ClientMessage, option_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ClientMessage, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ClientMessage, synchronize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ClientMessage, connectedusers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ClientMessage, changestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ClientMessage, broadcast_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ClientMessage, directmessage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ClientMessage, acknowledge_),
  6,
  7,
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ServerMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ServerMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ServerMessage, option_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ServerMessage, broadcast_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ServerMessage, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ServerMessage, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ServerMessage, myinforesponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ServerMessage, connecteduserresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ServerMessage, changestatusresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ServerMessage, broadcastresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::ServerMessage, directmessageresponse_),
  8,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::chat::MyInfoSynchronize)},
  { 9, 15, sizeof(::chat::MyInfoResponse)},
  { 16, 22, sizeof(::chat::MyInfoAcknowledge)},
  { 23, 30, sizeof(::chat::connectedUserRequest)},
  { 32, 41, sizeof(::chat::ConnectedUser)},
  { 45, 51, sizeof(::chat::ConnectedUserResponse)},
  { 52, 58, sizeof(::chat::ChangeStatusRequest)},
  { 59, 66, sizeof(::chat::ChangeStatusResponse)},
  { 68, 74, sizeof(::chat::BroadcastRequest)},
  { 75, 81, sizeof(::chat::BroadcastResponse)},
  { 82, 90, sizeof(::chat::BroadcastMessage)},
  { 93, 101, sizeof(::chat::DirectMessageRequest)},
  { 104, 110, sizeof(::chat::DirectMessageResponse)},
  { 111, 119, sizeof(::chat::DirectMessage)},
  { 122, 128, sizeof(::chat::ErrorResponse)},
  { 129, 142, sizeof(::chat::ClientMessage)},
  { 150, 164, sizeof(::chat::ServerMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_MyInfoSynchronize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_MyInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_MyInfoAcknowledge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_connectedUserRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_ConnectedUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_ConnectedUserResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_ChangeStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_ChangeStatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_BroadcastRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_BroadcastResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_BroadcastMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_DirectMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_DirectMessageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_DirectMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_ErrorResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_ClientMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::_ServerMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "mensaje.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmensaje.proto\022\004chat\"1\n\021MyInfoSynchroni"
      "ze\022\020\n\010username\030\001 \002(\t\022\n\n\002ip\030\002 \001(\t\" \n\016MyIn"
      "foResponse\022\016\n\006userId\030\001 \002(\005\"#\n\021MyInfoAckn"
      "owledge\022\016\n\006userId\030\001 \002(\005\"8\n\024connectedUser"
      "Request\022\016\n\006userId\030\001 \001(\005\022\020\n\010username\030\002 \001("
      "\t\"M\n\rConnectedUser\022\020\n\010username\030\001 \002(\t\022\016\n\006"
      "status\030\002 \001(\t\022\016\n\006userId\030\003 \001(\005\022\n\n\002ip\030\004 \001(\t"
      "\"D\n\025ConnectedUserResponse\022+\n\016connectedUs"
      "ers\030\001 \003(\0132\023.chat.ConnectedUser\"%\n\023Change"
      "StatusRequest\022\016\n\006status\030\001 \002(\t\"6\n\024ChangeS"
      "tatusResponse\022\016\n\006userId\030\001 \002(\005\022\016\n\006status\030"
      "\002 \002(\t\"#\n\020BroadcastRequest\022\017\n\007message\030\001 \002"
      "(\t\"*\n\021BroadcastResponse\022\025\n\rmessageStatus"
      "\030\001 \002(\t\"E\n\020BroadcastMessage\022\017\n\007message\030\001 "
      "\002(\t\022\016\n\006userId\030\002 \002(\005\022\020\n\010username\030\003 \001(\t\"I\n"
      "\024DirectMessageRequest\022\017\n\007message\030\001 \002(\t\022\016"
      "\n\006userId\030\002 \001(\005\022\020\n\010username\030\003 \001(\t\".\n\025Dire"
      "ctMessageResponse\022\025\n\rmessageStatus\030\001 \002(\t"
      "\"B\n\rDirectMessage\022\017\n\007message\030\001 \002(\t\022\016\n\006us"
      "erId\030\002 \002(\005\022\020\n\010username\030\003 \001(\t\"%\n\rErrorRes"
      "ponse\022\024\n\014errorMessage\030\001 \002(\t\"\316\002\n\rClientMe"
      "ssage\022\016\n\006option\030\001 \002(\005\022\016\n\006userId\030\002 \001(\005\022,\n"
      "\013synchronize\030\003 \001(\0132\027.chat.MyInfoSynchron"
      "ize\0222\n\016connectedUsers\030\004 \001(\0132\032.chat.conne"
      "ctedUserRequest\022/\n\014changeStatus\030\005 \001(\0132\031."
      "chat.ChangeStatusRequest\022)\n\tbroadcast\030\006 "
      "\001(\0132\026.chat.BroadcastRequest\0221\n\rdirectMes"
      "sage\030\007 \001(\0132\032.chat.DirectMessageRequest\022,"
      "\n\013acknowledge\030\010 \001(\0132\027.chat.MyInfoAcknowl"
      "edge\"\250\003\n\rServerMessage\022\016\n\006option\030\001 \002(\005\022)"
      "\n\tbroadcast\030\002 \001(\0132\026.chat.BroadcastMessag"
      "e\022$\n\007message\030\003 \001(\0132\023.chat.DirectMessage\022"
      "\"\n\005error\030\004 \001(\0132\023.chat.ErrorResponse\022,\n\016m"
      "yInfoResponse\030\005 \001(\0132\024.chat.MyInfoRespons"
      "e\022:\n\025connectedUserResponse\030\006 \001(\0132\033.chat."
      "ConnectedUserResponse\0228\n\024changeStatusRes"
      "ponse\030\007 \001(\0132\032.chat.ChangeStatusResponse\022"
      "2\n\021broadcastResponse\030\010 \001(\0132\027.chat.Broadc"
      "astResponse\022:\n\025directMessageResponse\030\t \001"
      "(\0132\033.chat.DirectMessageResponse"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1591);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mensaje.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mensaje_2eproto
namespace chat {

// ===================================================================

void MyInfoSynchronize::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyInfoSynchronize::kUsernameFieldNumber;
const int MyInfoSynchronize::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyInfoSynchronize::MyInfoSynchronize()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_MyInfoSynchronize.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.MyInfoSynchronize)
}
MyInfoSynchronize::MyInfoSynchronize(const MyInfoSynchronize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  // @@protoc_insertion_point(copy_constructor:chat.MyInfoSynchronize)
}

void MyInfoSynchronize::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MyInfoSynchronize::~MyInfoSynchronize() {
  // @@protoc_insertion_point(destructor:chat.MyInfoSynchronize)
  SharedDtor();
}

void MyInfoSynchronize::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MyInfoSynchronize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MyInfoSynchronize::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MyInfoSynchronize& MyInfoSynchronize::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_MyInfoSynchronize.base);
  return *internal_default_instance();
}


void MyInfoSynchronize::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.MyInfoSynchronize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      username_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      ip_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MyInfoSynchronize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.MyInfoSynchronize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.MyInfoSynchronize.username");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.MyInfoSynchronize.ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.MyInfoSynchronize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.MyInfoSynchronize)
  return false;
#undef DO_
}

void MyInfoSynchronize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.MyInfoSynchronize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string username = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.MyInfoSynchronize.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string ip = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.MyInfoSynchronize.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.MyInfoSynchronize)
}

::google::protobuf::uint8* MyInfoSynchronize::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.MyInfoSynchronize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string username = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.MyInfoSynchronize.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string ip = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.MyInfoSynchronize.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.MyInfoSynchronize)
  return target;
}

size_t MyInfoSynchronize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.MyInfoSynchronize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string username = 1;
  if (has_username()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }
  // optional string ip = 2;
  if (has_ip()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MyInfoSynchronize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.MyInfoSynchronize)
  GOOGLE_DCHECK_NE(&from, this);
  const MyInfoSynchronize* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyInfoSynchronize>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.MyInfoSynchronize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.MyInfoSynchronize)
    MergeFrom(*source);
  }
}

void MyInfoSynchronize::MergeFrom(const MyInfoSynchronize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.MyInfoSynchronize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
  }
}

void MyInfoSynchronize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.MyInfoSynchronize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyInfoSynchronize::CopyFrom(const MyInfoSynchronize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.MyInfoSynchronize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MyInfoSynchronize::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MyInfoSynchronize::Swap(MyInfoSynchronize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyInfoSynchronize::InternalSwap(MyInfoSynchronize* other) {
  using std::swap;
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MyInfoSynchronize::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MyInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyInfoResponse::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyInfoResponse::MyInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_MyInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.MyInfoResponse)
}
MyInfoResponse::MyInfoResponse(const MyInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:chat.MyInfoResponse)
}

void MyInfoResponse::SharedCtor() {
  userid_ = 0;
}

MyInfoResponse::~MyInfoResponse() {
  // @@protoc_insertion_point(destructor:chat.MyInfoResponse)
  SharedDtor();
}

void MyInfoResponse::SharedDtor() {
}

void MyInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MyInfoResponse::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MyInfoResponse& MyInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_MyInfoResponse.base);
  return *internal_default_instance();
}


void MyInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.MyInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MyInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.MyInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.MyInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.MyInfoResponse)
  return false;
#undef DO_
}

void MyInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.MyInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.MyInfoResponse)
}

::google::protobuf::uint8* MyInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.MyInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.MyInfoResponse)
  return target;
}

size_t MyInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.MyInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 userId = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MyInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.MyInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MyInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.MyInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.MyInfoResponse)
    MergeFrom(*source);
  }
}

void MyInfoResponse::MergeFrom(const MyInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.MyInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void MyInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.MyInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyInfoResponse::CopyFrom(const MyInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.MyInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MyInfoResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MyInfoResponse::Swap(MyInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyInfoResponse::InternalSwap(MyInfoResponse* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MyInfoResponse::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MyInfoAcknowledge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyInfoAcknowledge::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyInfoAcknowledge::MyInfoAcknowledge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_MyInfoAcknowledge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.MyInfoAcknowledge)
}
MyInfoAcknowledge::MyInfoAcknowledge(const MyInfoAcknowledge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:chat.MyInfoAcknowledge)
}

void MyInfoAcknowledge::SharedCtor() {
  userid_ = 0;
}

MyInfoAcknowledge::~MyInfoAcknowledge() {
  // @@protoc_insertion_point(destructor:chat.MyInfoAcknowledge)
  SharedDtor();
}

void MyInfoAcknowledge::SharedDtor() {
}

void MyInfoAcknowledge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MyInfoAcknowledge::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MyInfoAcknowledge& MyInfoAcknowledge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_MyInfoAcknowledge.base);
  return *internal_default_instance();
}


void MyInfoAcknowledge::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.MyInfoAcknowledge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MyInfoAcknowledge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.MyInfoAcknowledge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.MyInfoAcknowledge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.MyInfoAcknowledge)
  return false;
#undef DO_
}

void MyInfoAcknowledge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.MyInfoAcknowledge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.MyInfoAcknowledge)
}

::google::protobuf::uint8* MyInfoAcknowledge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.MyInfoAcknowledge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.MyInfoAcknowledge)
  return target;
}

size_t MyInfoAcknowledge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.MyInfoAcknowledge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 userId = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MyInfoAcknowledge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.MyInfoAcknowledge)
  GOOGLE_DCHECK_NE(&from, this);
  const MyInfoAcknowledge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyInfoAcknowledge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.MyInfoAcknowledge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.MyInfoAcknowledge)
    MergeFrom(*source);
  }
}

void MyInfoAcknowledge::MergeFrom(const MyInfoAcknowledge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.MyInfoAcknowledge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void MyInfoAcknowledge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.MyInfoAcknowledge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyInfoAcknowledge::CopyFrom(const MyInfoAcknowledge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.MyInfoAcknowledge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MyInfoAcknowledge::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MyInfoAcknowledge::Swap(MyInfoAcknowledge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyInfoAcknowledge::InternalSwap(MyInfoAcknowledge* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MyInfoAcknowledge::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void connectedUserRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int connectedUserRequest::kUserIdFieldNumber;
const int connectedUserRequest::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

connectedUserRequest::connectedUserRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_connectedUserRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.connectedUserRequest)
}
connectedUserRequest::connectedUserRequest(const connectedUserRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:chat.connectedUserRequest)
}

void connectedUserRequest::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
}

connectedUserRequest::~connectedUserRequest() {
  // @@protoc_insertion_point(destructor:chat.connectedUserRequest)
  SharedDtor();
}

void connectedUserRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void connectedUserRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* connectedUserRequest::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const connectedUserRequest& connectedUserRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_connectedUserRequest.base);
  return *internal_default_instance();
}


void connectedUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.connectedUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    username_.ClearNonDefaultToEmptyNoArena();
  }
  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool connectedUserRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.connectedUserRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.connectedUserRequest.username");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.connectedUserRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.connectedUserRequest)
  return false;
#undef DO_
}

void connectedUserRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.connectedUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userId = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // optional string username = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.connectedUserRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.connectedUserRequest)
}

::google::protobuf::uint8* connectedUserRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.connectedUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 userId = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // optional string username = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.connectedUserRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.connectedUserRequest)
  return target;
}

size_t connectedUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.connectedUserRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string username = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional int32 userId = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void connectedUserRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.connectedUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const connectedUserRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const connectedUserRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.connectedUserRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.connectedUserRequest)
    MergeFrom(*source);
  }
}

void connectedUserRequest::MergeFrom(const connectedUserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.connectedUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void connectedUserRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.connectedUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void connectedUserRequest::CopyFrom(const connectedUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.connectedUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool connectedUserRequest::IsInitialized() const {
  return true;
}

void connectedUserRequest::Swap(connectedUserRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void connectedUserRequest::InternalSwap(connectedUserRequest* other) {
  using std::swap;
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata connectedUserRequest::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectedUser::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectedUser::kUsernameFieldNumber;
const int ConnectedUser::kStatusFieldNumber;
const int ConnectedUser::kUserIdFieldNumber;
const int ConnectedUser::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectedUser::ConnectedUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_ConnectedUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.ConnectedUser)
}
ConnectedUser::ConnectedUser(const ConnectedUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_status()) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:chat.ConnectedUser)
}

void ConnectedUser::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
}

ConnectedUser::~ConnectedUser() {
  // @@protoc_insertion_point(destructor:chat.ConnectedUser)
  SharedDtor();
}

void ConnectedUser::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConnectedUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectedUser::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectedUser& ConnectedUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_ConnectedUser.base);
  return *internal_default_instance();
}


void ConnectedUser::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.ConnectedUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      username_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      status_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      ip_.ClearNonDefaultToEmptyNoArena();
    }
  }
  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConnectedUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.ConnectedUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.ConnectedUser.username");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.ConnectedUser.status");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 userId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.ConnectedUser.ip");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.ConnectedUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.ConnectedUser)
  return false;
#undef DO_
}

void ConnectedUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.ConnectedUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string username = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.ConnectedUser.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string status = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.ConnectedUser.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->status(), output);
  }

  // optional int32 userId = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->userid(), output);
  }

  // optional string ip = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.ConnectedUser.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.ConnectedUser)
}

::google::protobuf::uint8* ConnectedUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.ConnectedUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string username = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.ConnectedUser.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string status = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.ConnectedUser.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->status(), target);
  }

  // optional int32 userId = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->userid(), target);
  }

  // optional string ip = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.ConnectedUser.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.ConnectedUser)
  return target;
}

size_t ConnectedUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.ConnectedUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string username = 1;
  if (has_username()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional string status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->status());
    }

    // optional string ip = 4;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // optional int32 userId = 3;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectedUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.ConnectedUser)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectedUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectedUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.ConnectedUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.ConnectedUser)
    MergeFrom(*source);
  }
}

void ConnectedUser::MergeFrom(const ConnectedUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.ConnectedUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_status();
      status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (cached_has_bits & 0x00000008u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConnectedUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.ConnectedUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectedUser::CopyFrom(const ConnectedUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.ConnectedUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectedUser::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ConnectedUser::Swap(ConnectedUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectedUser::InternalSwap(ConnectedUser* other) {
  using std::swap;
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectedUser::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectedUserResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectedUserResponse::kConnectedUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectedUserResponse::ConnectedUserResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_ConnectedUserResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.ConnectedUserResponse)
}
ConnectedUserResponse::ConnectedUserResponse(const ConnectedUserResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      connectedusers_(from.connectedusers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:chat.ConnectedUserResponse)
}

void ConnectedUserResponse::SharedCtor() {
}

ConnectedUserResponse::~ConnectedUserResponse() {
  // @@protoc_insertion_point(destructor:chat.ConnectedUserResponse)
  SharedDtor();
}

void ConnectedUserResponse::SharedDtor() {
}

void ConnectedUserResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectedUserResponse::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectedUserResponse& ConnectedUserResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_ConnectedUserResponse.base);
  return *internal_default_instance();
}


void ConnectedUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.ConnectedUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connectedusers_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConnectedUserResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.ConnectedUserResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .chat.ConnectedUser connectedUsers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_connectedusers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.ConnectedUserResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.ConnectedUserResponse)
  return false;
#undef DO_
}

void ConnectedUserResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.ConnectedUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .chat.ConnectedUser connectedUsers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->connectedusers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->connectedusers(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.ConnectedUserResponse)
}

::google::protobuf::uint8* ConnectedUserResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.ConnectedUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .chat.ConnectedUser connectedUsers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->connectedusers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->connectedusers(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.ConnectedUserResponse)
  return target;
}

size_t ConnectedUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.ConnectedUserResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .chat.ConnectedUser connectedUsers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->connectedusers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->connectedusers(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectedUserResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.ConnectedUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectedUserResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectedUserResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.ConnectedUserResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.ConnectedUserResponse)
    MergeFrom(*source);
  }
}

void ConnectedUserResponse::MergeFrom(const ConnectedUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.ConnectedUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  connectedusers_.MergeFrom(from.connectedusers_);
}

void ConnectedUserResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.ConnectedUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectedUserResponse::CopyFrom(const ConnectedUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.ConnectedUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectedUserResponse::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->connectedusers())) return false;
  return true;
}

void ConnectedUserResponse::Swap(ConnectedUserResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectedUserResponse::InternalSwap(ConnectedUserResponse* other) {
  using std::swap;
  CastToBase(&connectedusers_)->InternalSwap(CastToBase(&other->connectedusers_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectedUserResponse::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeStatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeStatusRequest::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeStatusRequest::ChangeStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_ChangeStatusRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.ChangeStatusRequest)
}
ChangeStatusRequest::ChangeStatusRequest(const ChangeStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_status()) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  // @@protoc_insertion_point(copy_constructor:chat.ChangeStatusRequest)
}

void ChangeStatusRequest::SharedCtor() {
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ChangeStatusRequest::~ChangeStatusRequest() {
  // @@protoc_insertion_point(destructor:chat.ChangeStatusRequest)
  SharedDtor();
}

void ChangeStatusRequest::SharedDtor() {
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChangeStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChangeStatusRequest::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeStatusRequest& ChangeStatusRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_ChangeStatusRequest.base);
  return *internal_default_instance();
}


void ChangeStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.ChangeStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    status_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangeStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.ChangeStatusRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.ChangeStatusRequest.status");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.ChangeStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.ChangeStatusRequest)
  return false;
#undef DO_
}

void ChangeStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.ChangeStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.ChangeStatusRequest.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.ChangeStatusRequest)
}

::google::protobuf::uint8* ChangeStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.ChangeStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.ChangeStatusRequest.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.ChangeStatusRequest)
  return target;
}

size_t ChangeStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.ChangeStatusRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.ChangeStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.ChangeStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.ChangeStatusRequest)
    MergeFrom(*source);
  }
}

void ChangeStatusRequest::MergeFrom(const ChangeStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.ChangeStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_has_status();
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void ChangeStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.ChangeStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeStatusRequest::CopyFrom(const ChangeStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.ChangeStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeStatusRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ChangeStatusRequest::Swap(ChangeStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeStatusRequest::InternalSwap(ChangeStatusRequest* other) {
  using std::swap;
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChangeStatusRequest::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangeStatusResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeStatusResponse::kUserIdFieldNumber;
const int ChangeStatusResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeStatusResponse::ChangeStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_ChangeStatusResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.ChangeStatusResponse)
}
ChangeStatusResponse::ChangeStatusResponse(const ChangeStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_status()) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:chat.ChangeStatusResponse)
}

void ChangeStatusResponse::SharedCtor() {
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
}

ChangeStatusResponse::~ChangeStatusResponse() {
  // @@protoc_insertion_point(destructor:chat.ChangeStatusResponse)
  SharedDtor();
}

void ChangeStatusResponse::SharedDtor() {
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChangeStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChangeStatusResponse::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangeStatusResponse& ChangeStatusResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_ChangeStatusResponse.base);
  return *internal_default_instance();
}


void ChangeStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.ChangeStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    status_.ClearNonDefaultToEmptyNoArena();
  }
  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangeStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.ChangeStatusResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.ChangeStatusResponse.status");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.ChangeStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.ChangeStatusResponse)
  return false;
#undef DO_
}

void ChangeStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.ChangeStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userId = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  // required string status = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.ChangeStatusResponse.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.ChangeStatusResponse)
}

::google::protobuf::uint8* ChangeStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.ChangeStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userId = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  // required string status = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.ChangeStatusResponse.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.ChangeStatusResponse)
  return target;
}

size_t ChangeStatusResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:chat.ChangeStatusResponse)
  size_t total_size = 0;

  if (has_status()) {
    // required string status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  if (has_userid()) {
    // required int32 userId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  return total_size;
}
size_t ChangeStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.ChangeStatusResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());

    // required int32 userId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.ChangeStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.ChangeStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.ChangeStatusResponse)
    MergeFrom(*source);
  }
}

void ChangeStatusResponse::MergeFrom(const ChangeStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.ChangeStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_status();
      status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChangeStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.ChangeStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeStatusResponse::CopyFrom(const ChangeStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.ChangeStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeStatusResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ChangeStatusResponse::Swap(ChangeStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeStatusResponse::InternalSwap(ChangeStatusResponse* other) {
  using std::swap;
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChangeStatusResponse::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BroadcastRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadcastRequest::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadcastRequest::BroadcastRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_BroadcastRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.BroadcastRequest)
}
BroadcastRequest::BroadcastRequest(const BroadcastRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:chat.BroadcastRequest)
}

void BroadcastRequest::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BroadcastRequest::~BroadcastRequest() {
  // @@protoc_insertion_point(destructor:chat.BroadcastRequest)
  SharedDtor();
}

void BroadcastRequest::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BroadcastRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BroadcastRequest::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BroadcastRequest& BroadcastRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_BroadcastRequest.base);
  return *internal_default_instance();
}


void BroadcastRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.BroadcastRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BroadcastRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.BroadcastRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.BroadcastRequest.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.BroadcastRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.BroadcastRequest)
  return false;
#undef DO_
}

void BroadcastRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.BroadcastRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.BroadcastRequest.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.BroadcastRequest)
}

::google::protobuf::uint8* BroadcastRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.BroadcastRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.BroadcastRequest.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.BroadcastRequest)
  return target;
}

size_t BroadcastRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.BroadcastRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BroadcastRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.BroadcastRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadcastRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadcastRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.BroadcastRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.BroadcastRequest)
    MergeFrom(*source);
  }
}

void BroadcastRequest::MergeFrom(const BroadcastRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.BroadcastRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    set_has_message();
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void BroadcastRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.BroadcastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastRequest::CopyFrom(const BroadcastRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.BroadcastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void BroadcastRequest::Swap(BroadcastRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadcastRequest::InternalSwap(BroadcastRequest* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BroadcastRequest::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BroadcastResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadcastResponse::kMessageStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadcastResponse::BroadcastResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_BroadcastResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.BroadcastResponse)
}
BroadcastResponse::BroadcastResponse(const BroadcastResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  messagestatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_messagestatus()) {
    messagestatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagestatus_);
  }
  // @@protoc_insertion_point(copy_constructor:chat.BroadcastResponse)
}

void BroadcastResponse::SharedCtor() {
  messagestatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BroadcastResponse::~BroadcastResponse() {
  // @@protoc_insertion_point(destructor:chat.BroadcastResponse)
  SharedDtor();
}

void BroadcastResponse::SharedDtor() {
  messagestatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BroadcastResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BroadcastResponse::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BroadcastResponse& BroadcastResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_BroadcastResponse.base);
  return *internal_default_instance();
}


void BroadcastResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.BroadcastResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    messagestatus_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BroadcastResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.BroadcastResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string messageStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagestatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messagestatus().data(), static_cast<int>(this->messagestatus().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.BroadcastResponse.messageStatus");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.BroadcastResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.BroadcastResponse)
  return false;
#undef DO_
}

void BroadcastResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.BroadcastResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string messageStatus = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagestatus().data(), static_cast<int>(this->messagestatus().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.BroadcastResponse.messageStatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->messagestatus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.BroadcastResponse)
}

::google::protobuf::uint8* BroadcastResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.BroadcastResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string messageStatus = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagestatus().data(), static_cast<int>(this->messagestatus().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.BroadcastResponse.messageStatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->messagestatus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.BroadcastResponse)
  return target;
}

size_t BroadcastResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.BroadcastResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string messageStatus = 1;
  if (has_messagestatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->messagestatus());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BroadcastResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.BroadcastResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadcastResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadcastResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.BroadcastResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.BroadcastResponse)
    MergeFrom(*source);
  }
}

void BroadcastResponse::MergeFrom(const BroadcastResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.BroadcastResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_messagestatus()) {
    set_has_messagestatus();
    messagestatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagestatus_);
  }
}

void BroadcastResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.BroadcastResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastResponse::CopyFrom(const BroadcastResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.BroadcastResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void BroadcastResponse::Swap(BroadcastResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadcastResponse::InternalSwap(BroadcastResponse* other) {
  using std::swap;
  messagestatus_.Swap(&other->messagestatus_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BroadcastResponse::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BroadcastMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadcastMessage::kMessageFieldNumber;
const int BroadcastMessage::kUserIdFieldNumber;
const int BroadcastMessage::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadcastMessage::BroadcastMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_BroadcastMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.BroadcastMessage)
}
BroadcastMessage::BroadcastMessage(const BroadcastMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:chat.BroadcastMessage)
}

void BroadcastMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
}

BroadcastMessage::~BroadcastMessage() {
  // @@protoc_insertion_point(destructor:chat.BroadcastMessage)
  SharedDtor();
}

void BroadcastMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BroadcastMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BroadcastMessage::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BroadcastMessage& BroadcastMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_BroadcastMessage.base);
  return *internal_default_instance();
}


void BroadcastMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.BroadcastMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      username_.ClearNonDefaultToEmptyNoArena();
    }
  }
  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BroadcastMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.BroadcastMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.BroadcastMessage.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 userId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.BroadcastMessage.username");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.BroadcastMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.BroadcastMessage)
  return false;
#undef DO_
}

void BroadcastMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.BroadcastMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.BroadcastMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // required int32 userId = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // optional string username = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.BroadcastMessage.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.BroadcastMessage)
}

::google::protobuf::uint8* BroadcastMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.BroadcastMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.BroadcastMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // required int32 userId = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // optional string username = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.BroadcastMessage.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.BroadcastMessage)
  return target;
}

size_t BroadcastMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:chat.BroadcastMessage)
  size_t total_size = 0;

  if (has_message()) {
    // required string message = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  if (has_userid()) {
    // required int32 userId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  return total_size;
}
size_t BroadcastMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.BroadcastMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string message = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());

    // required int32 userId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string username = 3;
  if (has_username()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BroadcastMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.BroadcastMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BroadcastMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadcastMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.BroadcastMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.BroadcastMessage)
    MergeFrom(*source);
  }
}

void BroadcastMessage::MergeFrom(const BroadcastMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.BroadcastMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000004u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BroadcastMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.BroadcastMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadcastMessage::CopyFrom(const BroadcastMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.BroadcastMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void BroadcastMessage::Swap(BroadcastMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadcastMessage::InternalSwap(BroadcastMessage* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BroadcastMessage::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DirectMessageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DirectMessageRequest::kMessageFieldNumber;
const int DirectMessageRequest::kUserIdFieldNumber;
const int DirectMessageRequest::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DirectMessageRequest::DirectMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_DirectMessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.DirectMessageRequest)
}
DirectMessageRequest::DirectMessageRequest(const DirectMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:chat.DirectMessageRequest)
}

void DirectMessageRequest::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
}

DirectMessageRequest::~DirectMessageRequest() {
  // @@protoc_insertion_point(destructor:chat.DirectMessageRequest)
  SharedDtor();
}

void DirectMessageRequest::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DirectMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DirectMessageRequest::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DirectMessageRequest& DirectMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_DirectMessageRequest.base);
  return *internal_default_instance();
}


void DirectMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.DirectMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      username_.ClearNonDefaultToEmptyNoArena();
    }
  }
  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DirectMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.DirectMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.DirectMessageRequest.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 userId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.DirectMessageRequest.username");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.DirectMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.DirectMessageRequest)
  return false;
#undef DO_
}

void DirectMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.DirectMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.DirectMessageRequest.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // optional int32 userId = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // optional string username = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.DirectMessageRequest.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.DirectMessageRequest)
}

::google::protobuf::uint8* DirectMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.DirectMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.DirectMessageRequest.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // optional int32 userId = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // optional string username = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.DirectMessageRequest.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.DirectMessageRequest)
  return target;
}

size_t DirectMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.DirectMessageRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional string username = 3;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional int32 userId = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DirectMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.DirectMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DirectMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DirectMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.DirectMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.DirectMessageRequest)
    MergeFrom(*source);
  }
}

void DirectMessageRequest::MergeFrom(const DirectMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.DirectMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000004u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DirectMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.DirectMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DirectMessageRequest::CopyFrom(const DirectMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.DirectMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirectMessageRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void DirectMessageRequest::Swap(DirectMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DirectMessageRequest::InternalSwap(DirectMessageRequest* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DirectMessageRequest::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DirectMessageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DirectMessageResponse::kMessageStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DirectMessageResponse::DirectMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_DirectMessageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.DirectMessageResponse)
}
DirectMessageResponse::DirectMessageResponse(const DirectMessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  messagestatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_messagestatus()) {
    messagestatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagestatus_);
  }
  // @@protoc_insertion_point(copy_constructor:chat.DirectMessageResponse)
}

void DirectMessageResponse::SharedCtor() {
  messagestatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DirectMessageResponse::~DirectMessageResponse() {
  // @@protoc_insertion_point(destructor:chat.DirectMessageResponse)
  SharedDtor();
}

void DirectMessageResponse::SharedDtor() {
  messagestatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DirectMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DirectMessageResponse::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DirectMessageResponse& DirectMessageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_DirectMessageResponse.base);
  return *internal_default_instance();
}


void DirectMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.DirectMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    messagestatus_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DirectMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.DirectMessageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string messageStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagestatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messagestatus().data(), static_cast<int>(this->messagestatus().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.DirectMessageResponse.messageStatus");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.DirectMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.DirectMessageResponse)
  return false;
#undef DO_
}

void DirectMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.DirectMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string messageStatus = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagestatus().data(), static_cast<int>(this->messagestatus().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.DirectMessageResponse.messageStatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->messagestatus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.DirectMessageResponse)
}

::google::protobuf::uint8* DirectMessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.DirectMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string messageStatus = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagestatus().data(), static_cast<int>(this->messagestatus().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.DirectMessageResponse.messageStatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->messagestatus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.DirectMessageResponse)
  return target;
}

size_t DirectMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.DirectMessageResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string messageStatus = 1;
  if (has_messagestatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->messagestatus());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DirectMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.DirectMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DirectMessageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DirectMessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.DirectMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.DirectMessageResponse)
    MergeFrom(*source);
  }
}

void DirectMessageResponse::MergeFrom(const DirectMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.DirectMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_messagestatus()) {
    set_has_messagestatus();
    messagestatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagestatus_);
  }
}

void DirectMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.DirectMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DirectMessageResponse::CopyFrom(const DirectMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.DirectMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirectMessageResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void DirectMessageResponse::Swap(DirectMessageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DirectMessageResponse::InternalSwap(DirectMessageResponse* other) {
  using std::swap;
  messagestatus_.Swap(&other->messagestatus_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DirectMessageResponse::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DirectMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DirectMessage::kMessageFieldNumber;
const int DirectMessage::kUserIdFieldNumber;
const int DirectMessage::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DirectMessage::DirectMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_DirectMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.DirectMessage)
}
DirectMessage::DirectMessage(const DirectMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:chat.DirectMessage)
}

void DirectMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = 0;
}

DirectMessage::~DirectMessage() {
  // @@protoc_insertion_point(destructor:chat.DirectMessage)
  SharedDtor();
}

void DirectMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DirectMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DirectMessage::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DirectMessage& DirectMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_DirectMessage.base);
  return *internal_default_instance();
}


void DirectMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.DirectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      username_.ClearNonDefaultToEmptyNoArena();
    }
  }
  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DirectMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.DirectMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.DirectMessage.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 userId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.DirectMessage.username");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.DirectMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.DirectMessage)
  return false;
#undef DO_
}

void DirectMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.DirectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.DirectMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // required int32 userId = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // optional string username = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.DirectMessage.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.DirectMessage)
}

::google::protobuf::uint8* DirectMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.DirectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.DirectMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // required int32 userId = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // optional string username = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.DirectMessage.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.DirectMessage)
  return target;
}

size_t DirectMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:chat.DirectMessage)
  size_t total_size = 0;

  if (has_message()) {
    // required string message = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  if (has_userid()) {
    // required int32 userId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  return total_size;
}
size_t DirectMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.DirectMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string message = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());

    // required int32 userId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string username = 3;
  if (has_username()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DirectMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.DirectMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const DirectMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DirectMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.DirectMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.DirectMessage)
    MergeFrom(*source);
  }
}

void DirectMessage::MergeFrom(const DirectMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.DirectMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000004u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DirectMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.DirectMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DirectMessage::CopyFrom(const DirectMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.DirectMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirectMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void DirectMessage::Swap(DirectMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DirectMessage::InternalSwap(DirectMessage* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DirectMessage::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ErrorResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorResponse::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorResponse::ErrorResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_ErrorResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.ErrorResponse)
}
ErrorResponse::ErrorResponse(const ErrorResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errormessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_errormessage()) {
    errormessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormessage_);
  }
  // @@protoc_insertion_point(copy_constructor:chat.ErrorResponse)
}

void ErrorResponse::SharedCtor() {
  errormessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ErrorResponse::~ErrorResponse() {
  // @@protoc_insertion_point(destructor:chat.ErrorResponse)
  SharedDtor();
}

void ErrorResponse::SharedDtor() {
  errormessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ErrorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ErrorResponse::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorResponse& ErrorResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_ErrorResponse.base);
  return *internal_default_instance();
}


void ErrorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.ErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    errormessage_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ErrorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.ErrorResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string errorMessage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errormessage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->errormessage().data(), static_cast<int>(this->errormessage().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "chat.ErrorResponse.errorMessage");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.ErrorResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.ErrorResponse)
  return false;
#undef DO_
}

void ErrorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.ErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string errorMessage = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errormessage().data(), static_cast<int>(this->errormessage().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.ErrorResponse.errorMessage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->errormessage(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.ErrorResponse)
}

::google::protobuf::uint8* ErrorResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.ErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string errorMessage = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errormessage().data(), static_cast<int>(this->errormessage().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "chat.ErrorResponse.errorMessage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->errormessage(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.ErrorResponse)
  return target;
}

size_t ErrorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.ErrorResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string errorMessage = 1;
  if (has_errormessage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errormessage());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.ErrorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.ErrorResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.ErrorResponse)
    MergeFrom(*source);
  }
}

void ErrorResponse::MergeFrom(const ErrorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.ErrorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errormessage()) {
    set_has_errormessage();
    errormessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormessage_);
  }
}

void ErrorResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.ErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorResponse::CopyFrom(const ErrorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.ErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ErrorResponse::Swap(ErrorResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorResponse::InternalSwap(ErrorResponse* other) {
  using std::swap;
  errormessage_.Swap(&other->errormessage_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ErrorResponse::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientMessage::InitAsDefaultInstance() {
  ::chat::_ClientMessage_default_instance_._instance.get_mutable()->synchronize_ = const_cast< ::chat::MyInfoSynchronize*>(
      ::chat::MyInfoSynchronize::internal_default_instance());
  ::chat::_ClientMessage_default_instance_._instance.get_mutable()->connectedusers_ = const_cast< ::chat::connectedUserRequest*>(
      ::chat::connectedUserRequest::internal_default_instance());
  ::chat::_ClientMessage_default_instance_._instance.get_mutable()->changestatus_ = const_cast< ::chat::ChangeStatusRequest*>(
      ::chat::ChangeStatusRequest::internal_default_instance());
  ::chat::_ClientMessage_default_instance_._instance.get_mutable()->broadcast_ = const_cast< ::chat::BroadcastRequest*>(
      ::chat::BroadcastRequest::internal_default_instance());
  ::chat::_ClientMessage_default_instance_._instance.get_mutable()->directmessage_ = const_cast< ::chat::DirectMessageRequest*>(
      ::chat::DirectMessageRequest::internal_default_instance());
  ::chat::_ClientMessage_default_instance_._instance.get_mutable()->acknowledge_ = const_cast< ::chat::MyInfoAcknowledge*>(
      ::chat::MyInfoAcknowledge::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientMessage::kOptionFieldNumber;
const int ClientMessage::kUserIdFieldNumber;
const int ClientMessage::kSynchronizeFieldNumber;
const int ClientMessage::kConnectedUsersFieldNumber;
const int ClientMessage::kChangeStatusFieldNumber;
const int ClientMessage::kBroadcastFieldNumber;
const int ClientMessage::kDirectMessageFieldNumber;
const int ClientMessage::kAcknowledgeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientMessage::ClientMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_ClientMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.ClientMessage)
}
ClientMessage::ClientMessage(const ClientMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_synchronize()) {
    synchronize_ = new ::chat::MyInfoSynchronize(*from.synchronize_);
  } else {
    synchronize_ = NULL;
  }
  if (from.has_connectedusers()) {
    connectedusers_ = new ::chat::connectedUserRequest(*from.connectedusers_);
  } else {
    connectedusers_ = NULL;
  }
  if (from.has_changestatus()) {
    changestatus_ = new ::chat::ChangeStatusRequest(*from.changestatus_);
  } else {
    changestatus_ = NULL;
  }
  if (from.has_broadcast()) {
    broadcast_ = new ::chat::BroadcastRequest(*from.broadcast_);
  } else {
    broadcast_ = NULL;
  }
  if (from.has_directmessage()) {
    directmessage_ = new ::chat::DirectMessageRequest(*from.directmessage_);
  } else {
    directmessage_ = NULL;
  }
  if (from.has_acknowledge()) {
    acknowledge_ = new ::chat::MyInfoAcknowledge(*from.acknowledge_);
  } else {
    acknowledge_ = NULL;
  }
  ::memcpy(&option_, &from.option_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&option_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:chat.ClientMessage)
}

void ClientMessage::SharedCtor() {
  ::memset(&synchronize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&synchronize_)) + sizeof(userid_));
}

ClientMessage::~ClientMessage() {
  // @@protoc_insertion_point(destructor:chat.ClientMessage)
  SharedDtor();
}

void ClientMessage::SharedDtor() {
  if (this != internal_default_instance()) delete synchronize_;
  if (this != internal_default_instance()) delete connectedusers_;
  if (this != internal_default_instance()) delete changestatus_;
  if (this != internal_default_instance()) delete broadcast_;
  if (this != internal_default_instance()) delete directmessage_;
  if (this != internal_default_instance()) delete acknowledge_;
}

void ClientMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientMessage::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientMessage& ClientMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_ClientMessage.base);
  return *internal_default_instance();
}


void ClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.ClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(synchronize_ != NULL);
      synchronize_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(connectedusers_ != NULL);
      connectedusers_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(changestatus_ != NULL);
      changestatus_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(broadcast_ != NULL);
      broadcast_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(directmessage_ != NULL);
      directmessage_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(acknowledge_ != NULL);
      acknowledge_->Clear();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&option_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&userid_) -
        reinterpret_cast<char*>(&option_)) + sizeof(userid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClientMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.ClientMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 option = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_option();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &option_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 userId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chat.MyInfoSynchronize synchronize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_synchronize()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chat.connectedUserRequest connectedUsers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_connectedusers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chat.ChangeStatusRequest changeStatus = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_changestatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chat.BroadcastRequest broadcast = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_broadcast()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chat.DirectMessageRequest directMessage = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_directmessage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chat.MyInfoAcknowledge acknowledge = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acknowledge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.ClientMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.ClientMessage)
  return false;
#undef DO_
}

void ClientMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.ClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 option = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->option(), output);
  }

  // optional int32 userId = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // optional .chat.MyInfoSynchronize synchronize = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_synchronize(), output);
  }

  // optional .chat.connectedUserRequest connectedUsers = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_connectedusers(), output);
  }

  // optional .chat.ChangeStatusRequest changeStatus = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_changestatus(), output);
  }

  // optional .chat.BroadcastRequest broadcast = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_broadcast(), output);
  }

  // optional .chat.DirectMessageRequest directMessage = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_directmessage(), output);
  }

  // optional .chat.MyInfoAcknowledge acknowledge = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_acknowledge(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.ClientMessage)
}

::google::protobuf::uint8* ClientMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.ClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 option = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->option(), target);
  }

  // optional int32 userId = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // optional .chat.MyInfoSynchronize synchronize = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_synchronize(), deterministic, target);
  }

  // optional .chat.connectedUserRequest connectedUsers = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_connectedusers(), deterministic, target);
  }

  // optional .chat.ChangeStatusRequest changeStatus = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_changestatus(), deterministic, target);
  }

  // optional .chat.BroadcastRequest broadcast = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_broadcast(), deterministic, target);
  }

  // optional .chat.DirectMessageRequest directMessage = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_directmessage(), deterministic, target);
  }

  // optional .chat.MyInfoAcknowledge acknowledge = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_acknowledge(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.ClientMessage)
  return target;
}

size_t ClientMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.ClientMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 option = 1;
  if (has_option()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->option());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .chat.MyInfoSynchronize synchronize = 3;
    if (has_synchronize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *synchronize_);
    }

    // optional .chat.connectedUserRequest connectedUsers = 4;
    if (has_connectedusers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *connectedusers_);
    }

    // optional .chat.ChangeStatusRequest changeStatus = 5;
    if (has_changestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *changestatus_);
    }

    // optional .chat.BroadcastRequest broadcast = 6;
    if (has_broadcast()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *broadcast_);
    }

    // optional .chat.DirectMessageRequest directMessage = 7;
    if (has_directmessage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *directmessage_);
    }

    // optional .chat.MyInfoAcknowledge acknowledge = 8;
    if (has_acknowledge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *acknowledge_);
    }

  }
  // optional int32 userId = 2;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.ClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.ClientMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.ClientMessage)
    MergeFrom(*source);
  }
}

void ClientMessage::MergeFrom(const ClientMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.ClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_synchronize()->::chat::MyInfoSynchronize::MergeFrom(from.synchronize());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_connectedusers()->::chat::connectedUserRequest::MergeFrom(from.connectedusers());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_changestatus()->::chat::ChangeStatusRequest::MergeFrom(from.changestatus());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_broadcast()->::chat::BroadcastRequest::MergeFrom(from.broadcast());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_directmessage()->::chat::DirectMessageRequest::MergeFrom(from.directmessage());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_acknowledge()->::chat::MyInfoAcknowledge::MergeFrom(from.acknowledge());
    }
    if (cached_has_bits & 0x00000040u) {
      option_ = from.option_;
    }
    if (cached_has_bits & 0x00000080u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClientMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMessage::CopyFrom(const ClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000040) != 0x00000040) return false;
  if (has_synchronize()) {
    if (!this->synchronize_->IsInitialized()) return false;
  }
  if (has_changestatus()) {
    if (!this->changestatus_->IsInitialized()) return false;
  }
  if (has_broadcast()) {
    if (!this->broadcast_->IsInitialized()) return false;
  }
  if (has_directmessage()) {
    if (!this->directmessage_->IsInitialized()) return false;
  }
  if (has_acknowledge()) {
    if (!this->acknowledge_->IsInitialized()) return false;
  }
  return true;
}

void ClientMessage::Swap(ClientMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientMessage::InternalSwap(ClientMessage* other) {
  using std::swap;
  swap(synchronize_, other->synchronize_);
  swap(connectedusers_, other->connectedusers_);
  swap(changestatus_, other->changestatus_);
  swap(broadcast_, other->broadcast_);
  swap(directmessage_, other->directmessage_);
  swap(acknowledge_, other->acknowledge_);
  swap(option_, other->option_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientMessage::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerMessage::InitAsDefaultInstance() {
  ::chat::_ServerMessage_default_instance_._instance.get_mutable()->broadcast_ = const_cast< ::chat::BroadcastMessage*>(
      ::chat::BroadcastMessage::internal_default_instance());
  ::chat::_ServerMessage_default_instance_._instance.get_mutable()->message_ = const_cast< ::chat::DirectMessage*>(
      ::chat::DirectMessage::internal_default_instance());
  ::chat::_ServerMessage_default_instance_._instance.get_mutable()->error_ = const_cast< ::chat::ErrorResponse*>(
      ::chat::ErrorResponse::internal_default_instance());
  ::chat::_ServerMessage_default_instance_._instance.get_mutable()->myinforesponse_ = const_cast< ::chat::MyInfoResponse*>(
      ::chat::MyInfoResponse::internal_default_instance());
  ::chat::_ServerMessage_default_instance_._instance.get_mutable()->connecteduserresponse_ = const_cast< ::chat::ConnectedUserResponse*>(
      ::chat::ConnectedUserResponse::internal_default_instance());
  ::chat::_ServerMessage_default_instance_._instance.get_mutable()->changestatusresponse_ = const_cast< ::chat::ChangeStatusResponse*>(
      ::chat::ChangeStatusResponse::internal_default_instance());
  ::chat::_ServerMessage_default_instance_._instance.get_mutable()->broadcastresponse_ = const_cast< ::chat::BroadcastResponse*>(
      ::chat::BroadcastResponse::internal_default_instance());
  ::chat::_ServerMessage_default_instance_._instance.get_mutable()->directmessageresponse_ = const_cast< ::chat::DirectMessageResponse*>(
      ::chat::DirectMessageResponse::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerMessage::kOptionFieldNumber;
const int ServerMessage::kBroadcastFieldNumber;
const int ServerMessage::kMessageFieldNumber;
const int ServerMessage::kErrorFieldNumber;
const int ServerMessage::kMyInfoResponseFieldNumber;
const int ServerMessage::kConnectedUserResponseFieldNumber;
const int ServerMessage::kChangeStatusResponseFieldNumber;
const int ServerMessage::kBroadcastResponseFieldNumber;
const int ServerMessage::kDirectMessageResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerMessage::ServerMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mensaje_2eproto::scc_info_ServerMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.ServerMessage)
}
ServerMessage::ServerMessage(const ServerMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_broadcast()) {
    broadcast_ = new ::chat::BroadcastMessage(*from.broadcast_);
  } else {
    broadcast_ = NULL;
  }
  if (from.has_message()) {
    message_ = new ::chat::DirectMessage(*from.message_);
  } else {
    message_ = NULL;
  }
  if (from.has_error()) {
    error_ = new ::chat::ErrorResponse(*from.error_);
  } else {
    error_ = NULL;
  }
  if (from.has_myinforesponse()) {
    myinforesponse_ = new ::chat::MyInfoResponse(*from.myinforesponse_);
  } else {
    myinforesponse_ = NULL;
  }
  if (from.has_connecteduserresponse()) {
    connecteduserresponse_ = new ::chat::ConnectedUserResponse(*from.connecteduserresponse_);
  } else {
    connecteduserresponse_ = NULL;
  }
  if (from.has_changestatusresponse()) {
    changestatusresponse_ = new ::chat::ChangeStatusResponse(*from.changestatusresponse_);
  } else {
    changestatusresponse_ = NULL;
  }
  if (from.has_broadcastresponse()) {
    broadcastresponse_ = new ::chat::BroadcastResponse(*from.broadcastresponse_);
  } else {
    broadcastresponse_ = NULL;
  }
  if (from.has_directmessageresponse()) {
    directmessageresponse_ = new ::chat::DirectMessageResponse(*from.directmessageresponse_);
  } else {
    directmessageresponse_ = NULL;
  }
  option_ = from.option_;
  // @@protoc_insertion_point(copy_constructor:chat.ServerMessage)
}

void ServerMessage::SharedCtor() {
  ::memset(&broadcast_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&option_) -
      reinterpret_cast<char*>(&broadcast_)) + sizeof(option_));
}

ServerMessage::~ServerMessage() {
  // @@protoc_insertion_point(destructor:chat.ServerMessage)
  SharedDtor();
}

void ServerMessage::SharedDtor() {
  if (this != internal_default_instance()) delete broadcast_;
  if (this != internal_default_instance()) delete message_;
  if (this != internal_default_instance()) delete error_;
  if (this != internal_default_instance()) delete myinforesponse_;
  if (this != internal_default_instance()) delete connecteduserresponse_;
  if (this != internal_default_instance()) delete changestatusresponse_;
  if (this != internal_default_instance()) delete broadcastresponse_;
  if (this != internal_default_instance()) delete directmessageresponse_;
}

void ServerMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerMessage::descriptor() {
  ::protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerMessage& ServerMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mensaje_2eproto::scc_info_ServerMessage.base);
  return *internal_default_instance();
}


void ServerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.ServerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(broadcast_ != NULL);
      broadcast_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(message_ != NULL);
      message_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(error_ != NULL);
      error_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(myinforesponse_ != NULL);
      myinforesponse_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(connecteduserresponse_ != NULL);
      connecteduserresponse_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(changestatusresponse_ != NULL);
      changestatusresponse_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(broadcastresponse_ != NULL);
      broadcastresponse_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(directmessageresponse_ != NULL);
      directmessageresponse_->Clear();
    }
  }
  option_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServerMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.ServerMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 option = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_option();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &option_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chat.BroadcastMessage broadcast = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_broadcast()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chat.DirectMessage message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chat.ErrorResponse error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chat.MyInfoResponse myInfoResponse = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_myinforesponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chat.ConnectedUserResponse connectedUserResponse = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_connecteduserresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chat.ChangeStatusResponse changeStatusResponse = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_changestatusresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chat.BroadcastResponse broadcastResponse = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_broadcastresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .chat.DirectMessageResponse directMessageResponse = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_directmessageresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.ServerMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.ServerMessage)
  return false;
#undef DO_
}

void ServerMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.ServerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 option = 1;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->option(), output);
  }

  // optional .chat.BroadcastMessage broadcast = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_broadcast(), output);
  }

  // optional .chat.DirectMessage message = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_message(), output);
  }

  // optional .chat.ErrorResponse error = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_error(), output);
  }

  // optional .chat.MyInfoResponse myInfoResponse = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_myinforesponse(), output);
  }

  // optional .chat.ConnectedUserResponse connectedUserResponse = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_connecteduserresponse(), output);
  }

  // optional .chat.ChangeStatusResponse changeStatusResponse = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_changestatusresponse(), output);
  }

  // optional .chat.BroadcastResponse broadcastResponse = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_broadcastresponse(), output);
  }

  // optional .chat.DirectMessageResponse directMessageResponse = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_directmessageresponse(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.ServerMessage)
}

::google::protobuf::uint8* ServerMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.ServerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 option = 1;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->option(), target);
  }

  // optional .chat.BroadcastMessage broadcast = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_broadcast(), deterministic, target);
  }

  // optional .chat.DirectMessage message = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_message(), deterministic, target);
  }

  // optional .chat.ErrorResponse error = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_error(), deterministic, target);
  }

  // optional .chat.MyInfoResponse myInfoResponse = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_myinforesponse(), deterministic, target);
  }

  // optional .chat.ConnectedUserResponse connectedUserResponse = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_connecteduserresponse(), deterministic, target);
  }

  // optional .chat.ChangeStatusResponse changeStatusResponse = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_changestatusresponse(), deterministic, target);
  }

  // optional .chat.BroadcastResponse broadcastResponse = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_broadcastresponse(), deterministic, target);
  }

  // optional .chat.DirectMessageResponse directMessageResponse = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_directmessageresponse(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.ServerMessage)
  return target;
}

size_t ServerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.ServerMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 option = 1;
  if (has_option()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->option());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .chat.BroadcastMessage broadcast = 2;
    if (has_broadcast()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *broadcast_);
    }

    // optional .chat.DirectMessage message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_);
    }

    // optional .chat.ErrorResponse error = 4;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *error_);
    }

    // optional .chat.MyInfoResponse myInfoResponse = 5;
    if (has_myinforesponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *myinforesponse_);
    }

    // optional .chat.ConnectedUserResponse connectedUserResponse = 6;
    if (has_connecteduserresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *connecteduserresponse_);
    }

    // optional .chat.ChangeStatusResponse changeStatusResponse = 7;
    if (has_changestatusresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *changestatusresponse_);
    }

    // optional .chat.BroadcastResponse broadcastResponse = 8;
    if (has_broadcastresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *broadcastresponse_);
    }

    // optional .chat.DirectMessageResponse directMessageResponse = 9;
    if (has_directmessageresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *directmessageresponse_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.ServerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.ServerMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.ServerMessage)
    MergeFrom(*source);
  }
}

void ServerMessage::MergeFrom(const ServerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.ServerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_broadcast()->::chat::BroadcastMessage::MergeFrom(from.broadcast());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_message()->::chat::DirectMessage::MergeFrom(from.message());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_error()->::chat::ErrorResponse::MergeFrom(from.error());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_myinforesponse()->::chat::MyInfoResponse::MergeFrom(from.myinforesponse());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_connecteduserresponse()->::chat::ConnectedUserResponse::MergeFrom(from.connecteduserresponse());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_changestatusresponse()->::chat::ChangeStatusResponse::MergeFrom(from.changestatusresponse());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_broadcastresponse()->::chat::BroadcastResponse::MergeFrom(from.broadcastresponse());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_directmessageresponse()->::chat::DirectMessageResponse::MergeFrom(from.directmessageresponse());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    set_option(from.option());
  }
}

void ServerMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.ServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage::CopyFrom(const ServerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.ServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000100) != 0x00000100) return false;
  if (has_broadcast()) {
    if (!this->broadcast_->IsInitialized()) return false;
  }
  if (has_message()) {
    if (!this->message_->IsInitialized()) return false;
  }
  if (has_error()) {
    if (!this->error_->IsInitialized()) return false;
  }
  if (has_myinforesponse()) {
    if (!this->myinforesponse_->IsInitialized()) return false;
  }
  if (has_connecteduserresponse()) {
    if (!this->connecteduserresponse_->IsInitialized()) return false;
  }
  if (has_changestatusresponse()) {
    if (!this->changestatusresponse_->IsInitialized()) return false;
  }
  if (has_broadcastresponse()) {
    if (!this->broadcastresponse_->IsInitialized()) return false;
  }
  if (has_directmessageresponse()) {
    if (!this->directmessageresponse_->IsInitialized()) return false;
  }
  return true;
}

void ServerMessage::Swap(ServerMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerMessage::InternalSwap(ServerMessage* other) {
  using std::swap;
  swap(broadcast_, other->broadcast_);
  swap(message_, other->message_);
  swap(error_, other->error_);
  swap(myinforesponse_, other->myinforesponse_);
  swap(connecteduserresponse_, other->connecteduserresponse_);
  swap(changestatusresponse_, other->changestatusresponse_);
  swap(broadcastresponse_, other->broadcastresponse_);
  swap(directmessageresponse_, other->directmessageresponse_);
  swap(option_, other->option_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerMessage::GetMetadata() const {
  protobuf_mensaje_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mensaje_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace chat
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::MyInfoSynchronize* Arena::CreateMaybeMessage< ::chat::MyInfoSynchronize >(Arena* arena) {
  return Arena::CreateInternal< ::chat::MyInfoSynchronize >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::MyInfoResponse* Arena::CreateMaybeMessage< ::chat::MyInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::chat::MyInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::MyInfoAcknowledge* Arena::CreateMaybeMessage< ::chat::MyInfoAcknowledge >(Arena* arena) {
  return Arena::CreateInternal< ::chat::MyInfoAcknowledge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::connectedUserRequest* Arena::CreateMaybeMessage< ::chat::connectedUserRequest >(Arena* arena) {
  return Arena::CreateInternal< ::chat::connectedUserRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::ConnectedUser* Arena::CreateMaybeMessage< ::chat::ConnectedUser >(Arena* arena) {
  return Arena::CreateInternal< ::chat::ConnectedUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::ConnectedUserResponse* Arena::CreateMaybeMessage< ::chat::ConnectedUserResponse >(Arena* arena) {
  return Arena::CreateInternal< ::chat::ConnectedUserResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::ChangeStatusRequest* Arena::CreateMaybeMessage< ::chat::ChangeStatusRequest >(Arena* arena) {
  return Arena::CreateInternal< ::chat::ChangeStatusRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::ChangeStatusResponse* Arena::CreateMaybeMessage< ::chat::ChangeStatusResponse >(Arena* arena) {
  return Arena::CreateInternal< ::chat::ChangeStatusResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::BroadcastRequest* Arena::CreateMaybeMessage< ::chat::BroadcastRequest >(Arena* arena) {
  return Arena::CreateInternal< ::chat::BroadcastRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::BroadcastResponse* Arena::CreateMaybeMessage< ::chat::BroadcastResponse >(Arena* arena) {
  return Arena::CreateInternal< ::chat::BroadcastResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::BroadcastMessage* Arena::CreateMaybeMessage< ::chat::BroadcastMessage >(Arena* arena) {
  return Arena::CreateInternal< ::chat::BroadcastMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::DirectMessageRequest* Arena::CreateMaybeMessage< ::chat::DirectMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::chat::DirectMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::DirectMessageResponse* Arena::CreateMaybeMessage< ::chat::DirectMessageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::chat::DirectMessageResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::DirectMessage* Arena::CreateMaybeMessage< ::chat::DirectMessage >(Arena* arena) {
  return Arena::CreateInternal< ::chat::DirectMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::ErrorResponse* Arena::CreateMaybeMessage< ::chat::ErrorResponse >(Arena* arena) {
  return Arena::CreateInternal< ::chat::ErrorResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::ClientMessage* Arena::CreateMaybeMessage< ::chat::ClientMessage >(Arena* arena) {
  return Arena::CreateInternal< ::chat::ClientMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::ServerMessage* Arena::CreateMaybeMessage< ::chat::ServerMessage >(Arena* arena) {
  return Arena::CreateInternal< ::chat::ServerMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
